@page "/"
@using StringMath

<div>
    <h3><span>@formula</span></h3>
    
    <table class="table mt-3">


        <tr>
            <td><button @onclick="() => calculate('1')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">1</button></td>
            <td><button @onclick="() => calculate('2')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">2</button></td>
            <td><button @onclick="() => calculate('3')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">3</button></td>
            <td><button @onclick="() => calculate('+')" class="btn btn-outline-success" style="width: 50px; height: 50px;">+</button></td>
        </tr>
        <tr>
            <td><button @onclick="() => calculate('4')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">4</button></td>
            <td><button @onclick="() => calculate('5')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">5</button></td>
            <td><button @onclick="() => calculate('6')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">6</button></td>
            <td><button @onclick="() => calculate('-')" class="btn btn-outline-success" style="width: 50px; height: 50px;">-</button></td>
        </tr>
        <tr>
            <td><button @onclick="() => calculate('7')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">7</button></td>
            <td><button @onclick="() => calculate('8')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">8</button></td>
            <td><button @onclick="() => calculate('9')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">9</button></td>
            <td><button @onclick="() => calculate('/')" class="btn btn-outline-success" style="width: 50px; height: 50px;">/</button></td>
        </tr>
        <tr>
            <td><button @onclick="() => calculate('(')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">(</button></td>
            <td><button @onclick="() => calculate('0')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">0</button></td>
            <td><button @onclick="() => calculate(')')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">)</button></td>
            <td><button @onclick="() => calculate('*')" class="btn btn-outline-success" style="width: 50px; height: 50px;">*</button></td>
        </tr>
        <tr>
            <td><button @onclick="() => calculate('C')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">C</button></td>
            <td><button @onclick="() => calculate('^')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">X<sup>y</sup></button></td>
            <td><button @onclick="() => calculate('.')" class="btn btn-outline-danger" style="width: 50px; height: 50px;">.</button></td>
            <td><button @onclick="() => calculate('=')" class="btn btn-outline-success" style="width: 50px; height: 50px;">=</button></td>
        </tr>
    </table>




    @*@for (int i = 0; i < 3; i++)
    {

        <div class="row">
            @for (int j = 0; j < 3; j++)
            {
                <div class="col-3">
                    <button class="btn btn-outline-dark">@j</button>
                </div>

            }
        </div>
    }

    @foreach (var number in numbers)
    {
        <div class="col-3">
            <div class="row">
                <button class="btn btn-outline-dark">@number</button>
            </div>
        </div>
    }*@
</div>

@code {
    List<int> numbers = new();

    string formula = "0";

    bool init = true;

    protected override void OnInitialized()
    {
        GenerateButtons();
    }

    private void GenerateButtons()
    {

        for (int i = 0; i <= 9; i++)
        {
            numbers.Add(i);
        }
    }


    private void calculate(char c)
    {
        try
        {

        if (c == 'C')
        {
            formula = "0";
            init = true;
        }

        else if (c != '=')
        {
            if (init)
            {
                formula = c.ToString();
                init = false;
            }
            else
            {
                formula += c;
            }

        }
        else
        {
            formula = formula.Eval().ToString().Replace(',','.');

        }

        }
        catch (Exception e)
        {
            formula = "Invalid format!";
            init = true;
        }
    }

}
